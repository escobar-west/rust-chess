use super::BitBoard;

pub const NOT_A_FILE: u64 = 0xfefefefefefefefe;
pub const NOT_AB_FILE: u64 = NOT_A_FILE & (NOT_A_FILE << 1);
pub const NOT_ABCD_FILE: u64 = NOT_AB_FILE & (NOT_AB_FILE << 2);
pub const NOT_H_FILE: u64 = 0x7f7f7f7f7f7f7f7f;
pub const NOT_GH_FILE: u64 = NOT_H_FILE & (NOT_H_FILE >> 1);
pub const NOT_EFGH_FILE: u64 = NOT_GH_FILE & (NOT_GH_FILE >> 2);
pub const DEBRUIJN64: u64 = 0x03f79d71b4cb0a89;

#[cfg_attr(rustfmt, rustfmt_skip)]
pub static FWDSCAN: [u8; 64] = [
     0,  1, 48,  2, 57, 49, 28,  3,
    61, 58, 50, 42, 38, 29, 17,  4,
    62, 55, 59, 36, 53, 51, 43, 22,
    45, 39, 33, 30, 24, 18, 12,  5,
    63, 47, 56, 27, 60, 41, 37, 16,
    54, 35, 52, 21, 44, 32, 23, 11,
    46, 26, 40, 15, 34, 20, 31, 10,
    25, 14, 19,  9, 13,  8,  7,  6
];

#[cfg_attr(rustfmt, rustfmt_skip)]
pub static BACKSCAN: [u8; 64] = [
     0, 47,  1, 56, 48, 27,  2, 60,
    57, 49, 41, 37, 28, 16,  3, 61,
    54, 58, 35, 52, 50, 42, 21, 44,
    38, 32, 29, 23, 17, 11,  4, 62,
    46, 55, 26, 59, 40, 36, 15, 53,
    34, 51, 20, 43, 31, 22, 10, 45,
    25, 39, 14, 33, 19, 30,  9, 24,
    13, 18,  8, 12,  7,  6,  5, 63
];

pub static ROWS: [BitBoard; 8] = [
    BitBoard::gen_row_mask(0),
    BitBoard::gen_row_mask(1),
    BitBoard::gen_row_mask(2),
    BitBoard::gen_row_mask(3),
    BitBoard::gen_row_mask(4),
    BitBoard::gen_row_mask(5),
    BitBoard::gen_row_mask(6),
    BitBoard::gen_row_mask(7),
];

pub static COLUMNS: [BitBoard; 8] = [
    BitBoard::gen_col_mask(0),
    BitBoard::gen_col_mask(1),
    BitBoard::gen_col_mask(2),
    BitBoard::gen_col_mask(3),
    BitBoard::gen_col_mask(4),
    BitBoard::gen_col_mask(5),
    BitBoard::gen_col_mask(6),
    BitBoard::gen_col_mask(7),
];

pub static SQUARES: [BitBoard; 64] = [
    BitBoard::gen_square_mask(0),
    BitBoard::gen_square_mask(1),
    BitBoard::gen_square_mask(2),
    BitBoard::gen_square_mask(3),
    BitBoard::gen_square_mask(4),
    BitBoard::gen_square_mask(5),
    BitBoard::gen_square_mask(6),
    BitBoard::gen_square_mask(7),
    BitBoard::gen_square_mask(8),
    BitBoard::gen_square_mask(9),
    BitBoard::gen_square_mask(10),
    BitBoard::gen_square_mask(11),
    BitBoard::gen_square_mask(12),
    BitBoard::gen_square_mask(13),
    BitBoard::gen_square_mask(14),
    BitBoard::gen_square_mask(15),
    BitBoard::gen_square_mask(16),
    BitBoard::gen_square_mask(17),
    BitBoard::gen_square_mask(18),
    BitBoard::gen_square_mask(19),
    BitBoard::gen_square_mask(20),
    BitBoard::gen_square_mask(21),
    BitBoard::gen_square_mask(22),
    BitBoard::gen_square_mask(23),
    BitBoard::gen_square_mask(24),
    BitBoard::gen_square_mask(25),
    BitBoard::gen_square_mask(26),
    BitBoard::gen_square_mask(27),
    BitBoard::gen_square_mask(28),
    BitBoard::gen_square_mask(29),
    BitBoard::gen_square_mask(30),
    BitBoard::gen_square_mask(31),
    BitBoard::gen_square_mask(32),
    BitBoard::gen_square_mask(33),
    BitBoard::gen_square_mask(34),
    BitBoard::gen_square_mask(35),
    BitBoard::gen_square_mask(36),
    BitBoard::gen_square_mask(37),
    BitBoard::gen_square_mask(38),
    BitBoard::gen_square_mask(39),
    BitBoard::gen_square_mask(40),
    BitBoard::gen_square_mask(41),
    BitBoard::gen_square_mask(42),
    BitBoard::gen_square_mask(43),
    BitBoard::gen_square_mask(44),
    BitBoard::gen_square_mask(45),
    BitBoard::gen_square_mask(46),
    BitBoard::gen_square_mask(47),
    BitBoard::gen_square_mask(48),
    BitBoard::gen_square_mask(49),
    BitBoard::gen_square_mask(50),
    BitBoard::gen_square_mask(51),
    BitBoard::gen_square_mask(52),
    BitBoard::gen_square_mask(53),
    BitBoard::gen_square_mask(54),
    BitBoard::gen_square_mask(55),
    BitBoard::gen_square_mask(56),
    BitBoard::gen_square_mask(57),
    BitBoard::gen_square_mask(58),
    BitBoard::gen_square_mask(59),
    BitBoard::gen_square_mask(60),
    BitBoard::gen_square_mask(61),
    BitBoard::gen_square_mask(62),
    BitBoard::gen_square_mask(63),
];

pub static STRAIGHT_MOVES: [[BitBoard; 4]; 64] = [
    [
        SQUARES[0].gen_east_mask(),
        SQUARES[0].gen_north_mask(),
        SQUARES[0].gen_west_mask(),
        SQUARES[0].gen_south_mask(),
    ],
    [
        SQUARES[1].gen_east_mask(),
        SQUARES[1].gen_north_mask(),
        SQUARES[1].gen_west_mask(),
        SQUARES[1].gen_south_mask(),
    ],
    [
        SQUARES[2].gen_east_mask(),
        SQUARES[2].gen_north_mask(),
        SQUARES[2].gen_west_mask(),
        SQUARES[2].gen_south_mask(),
    ],
    [
        SQUARES[3].gen_east_mask(),
        SQUARES[3].gen_north_mask(),
        SQUARES[3].gen_west_mask(),
        SQUARES[3].gen_south_mask(),
    ],
    [
        SQUARES[4].gen_east_mask(),
        SQUARES[4].gen_north_mask(),
        SQUARES[4].gen_west_mask(),
        SQUARES[4].gen_south_mask(),
    ],
    [
        SQUARES[5].gen_east_mask(),
        SQUARES[5].gen_north_mask(),
        SQUARES[5].gen_west_mask(),
        SQUARES[5].gen_south_mask(),
    ],
    [
        SQUARES[6].gen_east_mask(),
        SQUARES[6].gen_north_mask(),
        SQUARES[6].gen_west_mask(),
        SQUARES[6].gen_south_mask(),
    ],
    [
        SQUARES[7].gen_east_mask(),
        SQUARES[7].gen_north_mask(),
        SQUARES[7].gen_west_mask(),
        SQUARES[7].gen_south_mask(),
    ],
    [
        SQUARES[8].gen_east_mask(),
        SQUARES[8].gen_north_mask(),
        SQUARES[8].gen_west_mask(),
        SQUARES[8].gen_south_mask(),
    ],
    [
        SQUARES[9].gen_east_mask(),
        SQUARES[9].gen_north_mask(),
        SQUARES[9].gen_west_mask(),
        SQUARES[9].gen_south_mask(),
    ],
    [
        SQUARES[10].gen_east_mask(),
        SQUARES[10].gen_north_mask(),
        SQUARES[10].gen_west_mask(),
        SQUARES[10].gen_south_mask(),
    ],
    [
        SQUARES[11].gen_east_mask(),
        SQUARES[11].gen_north_mask(),
        SQUARES[11].gen_west_mask(),
        SQUARES[11].gen_south_mask(),
    ],
    [
        SQUARES[12].gen_east_mask(),
        SQUARES[12].gen_north_mask(),
        SQUARES[12].gen_west_mask(),
        SQUARES[12].gen_south_mask(),
    ],
    [
        SQUARES[13].gen_east_mask(),
        SQUARES[13].gen_north_mask(),
        SQUARES[13].gen_west_mask(),
        SQUARES[13].gen_south_mask(),
    ],
    [
        SQUARES[14].gen_east_mask(),
        SQUARES[14].gen_north_mask(),
        SQUARES[14].gen_west_mask(),
        SQUARES[14].gen_south_mask(),
    ],
    [
        SQUARES[15].gen_east_mask(),
        SQUARES[15].gen_north_mask(),
        SQUARES[15].gen_west_mask(),
        SQUARES[15].gen_south_mask(),
    ],
    [
        SQUARES[16].gen_east_mask(),
        SQUARES[16].gen_north_mask(),
        SQUARES[16].gen_west_mask(),
        SQUARES[16].gen_south_mask(),
    ],
    [
        SQUARES[17].gen_east_mask(),
        SQUARES[17].gen_north_mask(),
        SQUARES[17].gen_west_mask(),
        SQUARES[17].gen_south_mask(),
    ],
    [
        SQUARES[18].gen_east_mask(),
        SQUARES[18].gen_north_mask(),
        SQUARES[18].gen_west_mask(),
        SQUARES[18].gen_south_mask(),
    ],
    [
        SQUARES[19].gen_east_mask(),
        SQUARES[19].gen_north_mask(),
        SQUARES[19].gen_west_mask(),
        SQUARES[19].gen_south_mask(),
    ],
    [
        SQUARES[20].gen_east_mask(),
        SQUARES[20].gen_north_mask(),
        SQUARES[20].gen_west_mask(),
        SQUARES[20].gen_south_mask(),
    ],
    [
        SQUARES[21].gen_east_mask(),
        SQUARES[21].gen_north_mask(),
        SQUARES[21].gen_west_mask(),
        SQUARES[21].gen_south_mask(),
    ],
    [
        SQUARES[22].gen_east_mask(),
        SQUARES[22].gen_north_mask(),
        SQUARES[22].gen_west_mask(),
        SQUARES[22].gen_south_mask(),
    ],
    [
        SQUARES[23].gen_east_mask(),
        SQUARES[23].gen_north_mask(),
        SQUARES[23].gen_west_mask(),
        SQUARES[23].gen_south_mask(),
    ],
    [
        SQUARES[24].gen_east_mask(),
        SQUARES[24].gen_north_mask(),
        SQUARES[24].gen_west_mask(),
        SQUARES[24].gen_south_mask(),
    ],
    [
        SQUARES[25].gen_east_mask(),
        SQUARES[25].gen_north_mask(),
        SQUARES[25].gen_west_mask(),
        SQUARES[25].gen_south_mask(),
    ],
    [
        SQUARES[26].gen_east_mask(),
        SQUARES[26].gen_north_mask(),
        SQUARES[26].gen_west_mask(),
        SQUARES[26].gen_south_mask(),
    ],
    [
        SQUARES[27].gen_east_mask(),
        SQUARES[27].gen_north_mask(),
        SQUARES[27].gen_west_mask(),
        SQUARES[27].gen_south_mask(),
    ],
    [
        SQUARES[28].gen_east_mask(),
        SQUARES[28].gen_north_mask(),
        SQUARES[28].gen_west_mask(),
        SQUARES[28].gen_south_mask(),
    ],
    [
        SQUARES[29].gen_east_mask(),
        SQUARES[29].gen_north_mask(),
        SQUARES[29].gen_west_mask(),
        SQUARES[29].gen_south_mask(),
    ],
    [
        SQUARES[30].gen_east_mask(),
        SQUARES[30].gen_north_mask(),
        SQUARES[30].gen_west_mask(),
        SQUARES[30].gen_south_mask(),
    ],
    [
        SQUARES[31].gen_east_mask(),
        SQUARES[31].gen_north_mask(),
        SQUARES[31].gen_west_mask(),
        SQUARES[31].gen_south_mask(),
    ],
    [
        SQUARES[32].gen_east_mask(),
        SQUARES[32].gen_north_mask(),
        SQUARES[32].gen_west_mask(),
        SQUARES[32].gen_south_mask(),
    ],
    [
        SQUARES[33].gen_east_mask(),
        SQUARES[33].gen_north_mask(),
        SQUARES[33].gen_west_mask(),
        SQUARES[33].gen_south_mask(),
    ],
    [
        SQUARES[34].gen_east_mask(),
        SQUARES[34].gen_north_mask(),
        SQUARES[34].gen_west_mask(),
        SQUARES[34].gen_south_mask(),
    ],
    [
        SQUARES[35].gen_east_mask(),
        SQUARES[35].gen_north_mask(),
        SQUARES[35].gen_west_mask(),
        SQUARES[35].gen_south_mask(),
    ],
    [
        SQUARES[36].gen_east_mask(),
        SQUARES[36].gen_north_mask(),
        SQUARES[36].gen_west_mask(),
        SQUARES[36].gen_south_mask(),
    ],
    [
        SQUARES[37].gen_east_mask(),
        SQUARES[37].gen_north_mask(),
        SQUARES[37].gen_west_mask(),
        SQUARES[37].gen_south_mask(),
    ],
    [
        SQUARES[38].gen_east_mask(),
        SQUARES[38].gen_north_mask(),
        SQUARES[38].gen_west_mask(),
        SQUARES[38].gen_south_mask(),
    ],
    [
        SQUARES[39].gen_east_mask(),
        SQUARES[39].gen_north_mask(),
        SQUARES[39].gen_west_mask(),
        SQUARES[39].gen_south_mask(),
    ],
    [
        SQUARES[40].gen_east_mask(),
        SQUARES[40].gen_north_mask(),
        SQUARES[40].gen_west_mask(),
        SQUARES[40].gen_south_mask(),
    ],
    [
        SQUARES[41].gen_east_mask(),
        SQUARES[41].gen_north_mask(),
        SQUARES[41].gen_west_mask(),
        SQUARES[41].gen_south_mask(),
    ],
    [
        SQUARES[42].gen_east_mask(),
        SQUARES[42].gen_north_mask(),
        SQUARES[42].gen_west_mask(),
        SQUARES[42].gen_south_mask(),
    ],
    [
        SQUARES[43].gen_east_mask(),
        SQUARES[43].gen_north_mask(),
        SQUARES[43].gen_west_mask(),
        SQUARES[43].gen_south_mask(),
    ],
    [
        SQUARES[44].gen_east_mask(),
        SQUARES[44].gen_north_mask(),
        SQUARES[44].gen_west_mask(),
        SQUARES[44].gen_south_mask(),
    ],
    [
        SQUARES[45].gen_east_mask(),
        SQUARES[45].gen_north_mask(),
        SQUARES[45].gen_west_mask(),
        SQUARES[45].gen_south_mask(),
    ],
    [
        SQUARES[46].gen_east_mask(),
        SQUARES[46].gen_north_mask(),
        SQUARES[46].gen_west_mask(),
        SQUARES[46].gen_south_mask(),
    ],
    [
        SQUARES[47].gen_east_mask(),
        SQUARES[47].gen_north_mask(),
        SQUARES[47].gen_west_mask(),
        SQUARES[47].gen_south_mask(),
    ],
    [
        SQUARES[48].gen_east_mask(),
        SQUARES[48].gen_north_mask(),
        SQUARES[48].gen_west_mask(),
        SQUARES[48].gen_south_mask(),
    ],
    [
        SQUARES[49].gen_east_mask(),
        SQUARES[49].gen_north_mask(),
        SQUARES[49].gen_west_mask(),
        SQUARES[49].gen_south_mask(),
    ],
    [
        SQUARES[50].gen_east_mask(),
        SQUARES[50].gen_north_mask(),
        SQUARES[50].gen_west_mask(),
        SQUARES[50].gen_south_mask(),
    ],
    [
        SQUARES[51].gen_east_mask(),
        SQUARES[51].gen_north_mask(),
        SQUARES[51].gen_west_mask(),
        SQUARES[51].gen_south_mask(),
    ],
    [
        SQUARES[52].gen_east_mask(),
        SQUARES[52].gen_north_mask(),
        SQUARES[52].gen_west_mask(),
        SQUARES[52].gen_south_mask(),
    ],
    [
        SQUARES[53].gen_east_mask(),
        SQUARES[53].gen_north_mask(),
        SQUARES[53].gen_west_mask(),
        SQUARES[53].gen_south_mask(),
    ],
    [
        SQUARES[54].gen_east_mask(),
        SQUARES[54].gen_north_mask(),
        SQUARES[54].gen_west_mask(),
        SQUARES[54].gen_south_mask(),
    ],
    [
        SQUARES[55].gen_east_mask(),
        SQUARES[55].gen_north_mask(),
        SQUARES[55].gen_west_mask(),
        SQUARES[55].gen_south_mask(),
    ],
    [
        SQUARES[56].gen_east_mask(),
        SQUARES[56].gen_north_mask(),
        SQUARES[56].gen_west_mask(),
        SQUARES[56].gen_south_mask(),
    ],
    [
        SQUARES[57].gen_east_mask(),
        SQUARES[57].gen_north_mask(),
        SQUARES[57].gen_west_mask(),
        SQUARES[57].gen_south_mask(),
    ],
    [
        SQUARES[58].gen_east_mask(),
        SQUARES[58].gen_north_mask(),
        SQUARES[58].gen_west_mask(),
        SQUARES[58].gen_south_mask(),
    ],
    [
        SQUARES[59].gen_east_mask(),
        SQUARES[59].gen_north_mask(),
        SQUARES[59].gen_west_mask(),
        SQUARES[59].gen_south_mask(),
    ],
    [
        SQUARES[60].gen_east_mask(),
        SQUARES[60].gen_north_mask(),
        SQUARES[60].gen_west_mask(),
        SQUARES[60].gen_south_mask(),
    ],
    [
        SQUARES[61].gen_east_mask(),
        SQUARES[61].gen_north_mask(),
        SQUARES[61].gen_west_mask(),
        SQUARES[61].gen_south_mask(),
    ],
    [
        SQUARES[62].gen_east_mask(),
        SQUARES[62].gen_north_mask(),
        SQUARES[62].gen_west_mask(),
        SQUARES[62].gen_south_mask(),
    ],
    [
        SQUARES[63].gen_east_mask(),
        SQUARES[63].gen_north_mask(),
        SQUARES[63].gen_west_mask(),
        SQUARES[63].gen_south_mask(),
    ],
];

pub static KNIGHT_MOVES: [BitBoard; 64] = [
    SQUARES[0].gen_knight_mask(),
    SQUARES[1].gen_knight_mask(),
    SQUARES[2].gen_knight_mask(),
    SQUARES[3].gen_knight_mask(),
    SQUARES[4].gen_knight_mask(),
    SQUARES[5].gen_knight_mask(),
    SQUARES[6].gen_knight_mask(),
    SQUARES[7].gen_knight_mask(),
    SQUARES[8].gen_knight_mask(),
    SQUARES[9].gen_knight_mask(),
    SQUARES[10].gen_knight_mask(),
    SQUARES[11].gen_knight_mask(),
    SQUARES[12].gen_knight_mask(),
    SQUARES[13].gen_knight_mask(),
    SQUARES[14].gen_knight_mask(),
    SQUARES[15].gen_knight_mask(),
    SQUARES[16].gen_knight_mask(),
    SQUARES[17].gen_knight_mask(),
    SQUARES[18].gen_knight_mask(),
    SQUARES[19].gen_knight_mask(),
    SQUARES[20].gen_knight_mask(),
    SQUARES[21].gen_knight_mask(),
    SQUARES[22].gen_knight_mask(),
    SQUARES[23].gen_knight_mask(),
    SQUARES[24].gen_knight_mask(),
    SQUARES[25].gen_knight_mask(),
    SQUARES[26].gen_knight_mask(),
    SQUARES[27].gen_knight_mask(),
    SQUARES[28].gen_knight_mask(),
    SQUARES[29].gen_knight_mask(),
    SQUARES[30].gen_knight_mask(),
    SQUARES[31].gen_knight_mask(),
    SQUARES[32].gen_knight_mask(),
    SQUARES[33].gen_knight_mask(),
    SQUARES[34].gen_knight_mask(),
    SQUARES[35].gen_knight_mask(),
    SQUARES[36].gen_knight_mask(),
    SQUARES[37].gen_knight_mask(),
    SQUARES[38].gen_knight_mask(),
    SQUARES[39].gen_knight_mask(),
    SQUARES[40].gen_knight_mask(),
    SQUARES[41].gen_knight_mask(),
    SQUARES[42].gen_knight_mask(),
    SQUARES[43].gen_knight_mask(),
    SQUARES[44].gen_knight_mask(),
    SQUARES[45].gen_knight_mask(),
    SQUARES[46].gen_knight_mask(),
    SQUARES[47].gen_knight_mask(),
    SQUARES[48].gen_knight_mask(),
    SQUARES[49].gen_knight_mask(),
    SQUARES[50].gen_knight_mask(),
    SQUARES[51].gen_knight_mask(),
    SQUARES[52].gen_knight_mask(),
    SQUARES[53].gen_knight_mask(),
    SQUARES[54].gen_knight_mask(),
    SQUARES[55].gen_knight_mask(),
    SQUARES[56].gen_knight_mask(),
    SQUARES[57].gen_knight_mask(),
    SQUARES[58].gen_knight_mask(),
    SQUARES[59].gen_knight_mask(),
    SQUARES[60].gen_knight_mask(),
    SQUARES[61].gen_knight_mask(),
    SQUARES[62].gen_knight_mask(),
    SQUARES[63].gen_knight_mask(),
];

pub static KING_MOVES: [BitBoard; 64] = [
    SQUARES[0].gen_king_mask(),
    SQUARES[1].gen_king_mask(),
    SQUARES[2].gen_king_mask(),
    SQUARES[3].gen_king_mask(),
    SQUARES[4].gen_king_mask(),
    SQUARES[5].gen_king_mask(),
    SQUARES[6].gen_king_mask(),
    SQUARES[7].gen_king_mask(),
    SQUARES[8].gen_king_mask(),
    SQUARES[9].gen_king_mask(),
    SQUARES[10].gen_king_mask(),
    SQUARES[11].gen_king_mask(),
    SQUARES[12].gen_king_mask(),
    SQUARES[13].gen_king_mask(),
    SQUARES[14].gen_king_mask(),
    SQUARES[15].gen_king_mask(),
    SQUARES[16].gen_king_mask(),
    SQUARES[17].gen_king_mask(),
    SQUARES[18].gen_king_mask(),
    SQUARES[19].gen_king_mask(),
    SQUARES[20].gen_king_mask(),
    SQUARES[21].gen_king_mask(),
    SQUARES[22].gen_king_mask(),
    SQUARES[23].gen_king_mask(),
    SQUARES[24].gen_king_mask(),
    SQUARES[25].gen_king_mask(),
    SQUARES[26].gen_king_mask(),
    SQUARES[27].gen_king_mask(),
    SQUARES[28].gen_king_mask(),
    SQUARES[29].gen_king_mask(),
    SQUARES[30].gen_king_mask(),
    SQUARES[31].gen_king_mask(),
    SQUARES[32].gen_king_mask(),
    SQUARES[33].gen_king_mask(),
    SQUARES[34].gen_king_mask(),
    SQUARES[35].gen_king_mask(),
    SQUARES[36].gen_king_mask(),
    SQUARES[37].gen_king_mask(),
    SQUARES[38].gen_king_mask(),
    SQUARES[39].gen_king_mask(),
    SQUARES[40].gen_king_mask(),
    SQUARES[41].gen_king_mask(),
    SQUARES[42].gen_king_mask(),
    SQUARES[43].gen_king_mask(),
    SQUARES[44].gen_king_mask(),
    SQUARES[45].gen_king_mask(),
    SQUARES[46].gen_king_mask(),
    SQUARES[47].gen_king_mask(),
    SQUARES[48].gen_king_mask(),
    SQUARES[49].gen_king_mask(),
    SQUARES[50].gen_king_mask(),
    SQUARES[51].gen_king_mask(),
    SQUARES[52].gen_king_mask(),
    SQUARES[53].gen_king_mask(),
    SQUARES[54].gen_king_mask(),
    SQUARES[55].gen_king_mask(),
    SQUARES[56].gen_king_mask(),
    SQUARES[57].gen_king_mask(),
    SQUARES[58].gen_king_mask(),
    SQUARES[59].gen_king_mask(),
    SQUARES[60].gen_king_mask(),
    SQUARES[61].gen_king_mask(),
    SQUARES[62].gen_king_mask(),
    SQUARES[63].gen_king_mask(),
];
